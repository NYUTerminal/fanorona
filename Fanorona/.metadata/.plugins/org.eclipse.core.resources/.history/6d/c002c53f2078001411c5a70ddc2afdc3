package Logic;

public class Point {

	public int x;

	public int y;

	private boolean isBlack;

	public Point(int a, int b) {
		x = a;
		y = b;
	}

	public int[] getPosition() {
		int[] position = new int[2];
		position[0] = x;
		position[1] = y;
		return position;
	}

	public int getX() {
		return x;
	}

	public void setX(int x) {
		this.x = x;
	}

	public int getY() {
		return y;
	}

	public void setY(int y) {
		this.y = y;
	}

	public boolean isBlack() {
		return isBlack;
	}

	public void setBlack(boolean isBlack) {
		this.isBlack = isBlack;
	}

	public void movePieceToLeft(int minRow) {
		// Do check the col restriction.
		if (this.x < minRow) {
			this.x = this.x + 1;
		}
	}

	public void movePieceToRight(int maxRow) {
		if (y < maxRow) {
		}
	}

	public void movePieceToUp(int maxCol) {
		if (y < maxCol) {
		}
	}

	public void movePieceToDown(int minCol) {
		if (y > minCol) {
		}
	}
	
	public boolean isValidPoint(int maxRow,int maxCol){
		if(this.x>maxCol||this.y>maxRow)
			retrn false
		
		return false;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Point other = (Point) obj;
		if (x != other.x)
			return false;
		if (y != other.y)
			return false;
		return true;
	}

}
